[
    {
        "id": "fc91cddb736ea4b5",
        "type": "comment",
        "z": "0ab28280b45e1167",
        "name": "Heizung Aussentemperatursensor Offset berechnen",
        "info": "Morgens ist der Sensor fÃ¼r ca. 1 Stunde in der Sonne\nUnterschied berechnen zwischen Wetterstation und dem Sensor\n\nInputs:\nws.Temperature.value\nsensor.heizung_aussentemp_vissmann_open3e\ninput_number.heizung_aussentemperatur_gebaude_offset\n\nOutput\n--> input_number.heizung_aussentemperatur_sensor_offset\n",
        "x": 210,
        "y": 3740,
        "wires": []
    },
    {
        "id": "2c65d3b2eaddfcab",
        "type": "server-state-changed",
        "z": "0ab28280b45e1167",
        "name": "Heizung Aussentemp Vissmann Open3e",
        "server": "68d43683.b7d22",
        "version": 6,
        "outputs": 2,
        "exposeAsEntityConfig": "",
        "entities": {
            "entity": [
                "sensor.heizung_aussentemp_vissmann_open3e"
            ],
            "substring": [],
            "regex": []
        },
        "outputInitially": true,
        "stateType": "num",
        "ifState": "ws.Temperature.value",
        "ifStateType": "global",
        "ifStateOperator": "is_not",
        "outputOnlyOnStateChange": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 180,
        "y": 3820,
        "wires": [
            [
                "2f9990ded3f20504",
                "61c334365adebcf9"
            ],
            [
                "61c334365adebcf9"
            ]
        ]
    },
    {
        "id": "2f9990ded3f20504",
        "type": "change",
        "z": "0ab28280b45e1167",
        "name": "unterschied berechnen",
        "rules": [
            {
                "t": "set",
                "p": "heizung.vissmann.aussentemperatur.sensor",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "aktdiff",
                "pt": "msg",
                "to": "($round($number($globalContext('ws.Temperature.value')) - $globalContext('heizung.vissmann.aussentemperatur.sensor') ))",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "alteroffset",
                "pt": "msg",
                "to": "($globalContext('heizung.vissmann.aussentemperatur.OutsideTempOffset'))",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "neueroffset",
                "pt": "msg",
                "to": "((alteroffset) + (aktdiff))",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "offsetdifferenz",
                "pt": "msg",
                "to": "($abs(((alteroffset) - (neueroffset))))",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "neueroffset",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 3820,
        "wires": [
            [
                "2891c40661e1f555",
                "0124297eedd08457"
            ]
        ]
    },
    {
        "id": "0124297eedd08457",
        "type": "debug",
        "z": "0ab28280b45e1167",
        "name": "debug 16",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 3760,
        "wires": []
    },
    {
        "id": "61c334365adebcf9",
        "type": "debug",
        "z": "0ab28280b45e1167",
        "name": "climateObject",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 3780,
        "wires": []
    },
    {
        "id": "4d8eb1a7dbee38e5",
        "type": "server-state-changed",
        "z": "0ab28280b45e1167",
        "name": "Heizung Aussentemperatur Offset",
        "server": "68d43683.b7d22",
        "version": 6,
        "outputs": 2,
        "exposeAsEntityConfig": "",
        "entities": {
            "entity": [
                "climate.heizung_aussentemperatur_offset"
            ],
            "substring": [],
            "regex": []
        },
        "outputInitially": true,
        "stateType": "num",
        "ifState": "0",
        "ifStateType": "num",
        "ifStateOperator": "is_not",
        "outputOnlyOnStateChange": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 160,
        "y": 4020,
        "wires": [
            [
                "1377c8d8566b1fa0",
                "9be727ba06f121d6"
            ],
            []
        ]
    },
    {
        "id": "1377c8d8566b1fa0",
        "type": "change",
        "z": "0ab28280b45e1167",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "heizung.vissmann.aussentemperatur.OutsideTempOffset",
                "pt": "global",
                "to": "data.new_state.attributes.temperature",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"threshold \" & $string($abs(data.new_state.attributes.temperature))",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 4020,
        "wires": [
            [
                "ae815aa2e2a409eb"
            ]
        ]
    },
    {
        "id": "9be727ba06f121d6",
        "type": "debug",
        "z": "0ab28280b45e1167",
        "name": "climateObject",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 3960,
        "wires": []
    },
    {
        "id": "2891c40661e1f555",
        "type": "switch",
        "z": "0ab28280b45e1167",
        "name": "Abweichung > +- threshold?",
        "property": "offsetdifferenz",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "heizung.vissmann.aussentemperatur.threshold",
                "vt": "global"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 840,
        "y": 3820,
        "wires": [
            [
                "8cba9e1eea51d5b8",
                "e8c1c0be7b68eb5a",
                "26359b4f3be7c3da"
            ],
            []
        ]
    },
    {
        "id": "8cba9e1eea51d5b8",
        "type": "api-call-service",
        "z": "0ab28280b45e1167",
        "name": "",
        "server": "68d43683.b7d22",
        "version": 7,
        "debugenabled": false,
        "action": "climate.set_temperature",
        "floorId": [],
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "climate.heizung_aussentemperatur_offset"
        ],
        "labelId": [],
        "data": "{\"temperature\":\"{{payload}}\"}",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "blockInputOverrides": true,
        "domain": "climate",
        "service": "set_temperature",
        "x": 1190,
        "y": 3820,
        "wires": [
            []
        ]
    },
    {
        "id": "e8c1c0be7b68eb5a",
        "type": "debug",
        "z": "0ab28280b45e1167",
        "name": "setClimateAussentempOffset",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1200,
        "y": 3900,
        "wires": []
    },
    {
        "id": "ae815aa2e2a409eb",
        "type": "mqtt out",
        "z": "0ab28280b45e1167",
        "d": true,
        "name": "",
        "topic": "home/status/heizung/outdoorsensorthreshold",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a0233fa7.1e9db",
        "x": 1160,
        "y": 4020,
        "wires": []
    },
    {
        "id": "248d8d0f5d8cb65f",
        "type": "mqtt in",
        "z": "0ab28280b45e1167",
        "name": "",
        "topic": "home/set/heizung/outdoorsensorthreshold",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "a0233fa7.1e9db",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 4100,
        "wires": [
            [
                "93e1d3852350dbf3",
                "d4b44d2dd59156bf"
            ]
        ]
    },
    {
        "id": "93e1d3852350dbf3",
        "type": "change",
        "z": "0ab28280b45e1167",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "heizung.vissmann.aussentemperatur.threshold",
                "pt": "global",
                "to": "$number($substringAfter(payload,\" \" ))",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 4100,
        "wires": [
            [
                "0f453e0f42153e2d",
                "c9778519926d1433"
            ]
        ]
    },
    {
        "id": "d4b44d2dd59156bf",
        "type": "debug",
        "z": "0ab28280b45e1167",
        "name": "debug 18",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 4160,
        "wires": []
    },
    {
        "id": "0f453e0f42153e2d",
        "type": "debug",
        "z": "0ab28280b45e1167",
        "name": "debug 19",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 4160,
        "wires": []
    },
    {
        "id": "26359b4f3be7c3da",
        "type": "debug",
        "z": "0ab28280b45e1167",
        "name": "debug 17",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 3760,
        "wires": []
    },
    {
        "id": "c9778519926d1433",
        "type": "mqtt out",
        "z": "0ab28280b45e1167",
        "name": "",
        "topic": "home/status/heizung/outdoorsensorthreshold",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a0233fa7.1e9db",
        "x": 1080,
        "y": 4100,
        "wires": []
    },
    {
        "id": "68d43683.b7d22",
        "type": "server",
        "name": "Home Assistant",
        "version": 5,
        "addon": false,
        "rejectUnauthorizedCerts": true,
        "ha_boolean": "y|yes|true|on|home|open",
        "connectionDelay": true,
        "cacheJson": true,
        "heartbeat": false,
        "heartbeatInterval": "30",
        "areaSelector": "friendlyName",
        "deviceSelector": "friendlyName",
        "entitySelector": "friendlyName",
        "statusSeparator": "at: ",
        "statusYear": "hidden",
        "statusMonth": "short",
        "statusDay": "numeric",
        "statusHourCycle": "h23",
        "statusTimeFormat": "h:m",
        "enableGlobalContextStore": true
    },
    {
        "id": "a0233fa7.1e9db",
        "type": "mqtt-broker",
        "name": "virtual-mqtt",
        "broker": "192.168.1.31",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "compatmode": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    }
]
